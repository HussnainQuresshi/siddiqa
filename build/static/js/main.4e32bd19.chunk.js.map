{"version":3,"sources":["Components/pdfToImages.js","Components/imagesToBook.js","App.js","reportWebVitals.js","index.js"],"names":["PDFJS","require","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","PdfToImages","setImages","classes","React","useState","open","setOpen","base64ToImages","rawData","a","images","getDocument","promise","pdf","canvas","document","createElement","i","numPages","getPage","page","viewport","getViewport","scale","context","getContext","height","width","render","canvasContext","push","toDataURL","remove","Container","clearOnUnmount","showAlerts","filesLimit","acceptedFiles","maxFileSize","onChange","files","selectedFile","file","length","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","target","result","readAsDataURL","Backdrop","className","CircularProgress","size","root","marginBottom","spacing","overflow","border","ImagesToBook","pages","reset","setPage","ref","useRef","pRef","minWidth","maxWidth","minHeight","maxHeight","maxShadowOpacity","showCover","mobileScrollSupport","usePortrait","autoSize","onFlip","data","current","childNodes","forEach","el","innerText","classList","add","setAttribute","map","src","alt","style","float","Button","onClick","variant","Pagination","value","count","e","Book","getPageFlip","flip","getPageCount","console","log","App","onClear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e32bd19.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst PDFJS = require(\"pdfjs-dist/webpack\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\nconst PdfToImages = ({ setImages }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const base64ToImages = async (rawData) => {\r\n    const images = [];\r\n    const pdf = await PDFJS.getDocument(rawData).promise;\r\n    const canvas = document.createElement(\"canvas\");\r\n    for (let i = 0; i < pdf.numPages; i++) {\r\n      const page = await pdf.getPage(i + 1);\r\n      const viewport = page.getViewport({ scale: 1 });\r\n      const context = canvas.getContext(\"2d\");\r\n      canvas.height = viewport.height;\r\n      canvas.width = viewport.width;\r\n      await page.render({ canvasContext: context, viewport: viewport }).promise;\r\n      images.push(canvas.toDataURL());\r\n    }\r\n\r\n    canvas.remove();\r\n    setOpen(false);\r\n    setImages(images);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <DropzoneArea\r\n        clearOnUnmount={true}\r\n        showAlerts={[\"error\"]}\r\n        filesLimit={1}\r\n        acceptedFiles={[\".pdf\"]}\r\n        maxFileSize={9999999999999999999999999999}\r\n        onChange={(files) => {\r\n          let selectedFile = files;\r\n          let file = null;\r\n          if (selectedFile.length > 0) {\r\n            let fileToLoad = selectedFile[0];\r\n            let fileReader = new FileReader();\r\n            fileReader.onload = function (fileLoadedEvent) {\r\n              setOpen(true);\r\n              file = fileLoadedEvent.target.result;\r\n              base64ToImages(file);\r\n            };\r\n            fileReader.readAsDataURL(fileToLoad);\r\n          }\r\n        }}\r\n      />\r\n      <Backdrop className={classes.backdrop} open={open} color=\"secondary\">\r\n        <CircularProgress size={100} color=\"secondary\" />\r\n      </Backdrop>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PdfToImages;\r\n","import { Container, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport HTMLFlipBook from \"react-pageflip\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    overflow: \"hidden\",\r\n    border: \"3px solid #f50057\",\r\n  },\r\n}));\r\n\r\nexport default function ImagesToBook({ pages, reset }) {\r\n  const [page, setPage] = React.useState(0);\r\n  const ref = React.useRef(null);\r\n  const pRef = React.useRef(null);\r\n\r\n  const settings = {\r\n    width: 550,\r\n    height: 733,\r\n    size: \"stretch\",\r\n    minWidth: 315,\r\n    maxWidth: 1000,\r\n    minHeight: 420,\r\n    maxHeight: 1350,\r\n    maxShadowOpacity: 0.5,\r\n    showCover: false,\r\n    mobileScrollSupport: true,\r\n    usePortrait: true,\r\n    autoSize: true,\r\n  };\r\n\r\n  const onPageChange = (e, page) => {\r\n    page = page - 1;\r\n    if (page % 2 === 0) {\r\n      let Book = ref.current.getPageFlip();\r\n      Book.flip(page, \"top\");\r\n      if (page === Book.getPageCount() - 1 || page === 0)\r\n        Book.flip(page, \"top\");\r\n      setPage(page);\r\n      console.log(\"setting page = \", page);\r\n    } else {\r\n      let Book = ref.current.getPageFlip();\r\n      Book.flip(page - 1, \"top\");\r\n      if (page === Book.getPageCount() - 1 || page === 1)\r\n        Book.flip(page - 1, \"top\");\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <HTMLFlipBook\r\n        ref={ref}\r\n        {...settings}\r\n        onFlip={({ data }) => {\r\n          data = data + 1;\r\n          let Pagination = pRef.current;\r\n          Pagination.childNodes[0].childNodes.forEach((el) => {\r\n            if (el.childNodes[0].innerText === `${data}`) {\r\n              el.classList.add(\"Mui-selected\");\r\n              el.childNodes[0].classList.add(\"Mui-selected\");\r\n              el.childNodes[0].setAttribute(\"aria-current\", \"true\");\r\n            } else {\r\n              el.classList.remove(\"Mui-selected\");\r\n              el.childNodes[0].classList.remove(\"Mui-selected\");\r\n              el.childNodes[0].setAttribute(\"aria-current\", \"false\");\r\n            }\r\n          });\r\n        }}\r\n      >\r\n        {pages.map((src, i) => (\r\n          <img src={src} alt={`Page ${i}`} />\r\n        ))}\r\n      </HTMLFlipBook>\r\n      <div style={{ float: \"left\" }}>\r\n        <Button onClick={reset} variant=\"outlined\" color=\"secondary\">\r\n          Reset <RotateLeftIcon />\r\n        </Button>\r\n      </div>\r\n      <div style={{ float: \"right\" }}>\r\n        <Pagination\r\n          ref={pRef}\r\n          value={page}\r\n          count={pages.length}\r\n          color=\"secondary\"\r\n          onChange={onPageChange}\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { PdfToImages, ImagesToBook } from \"./Components\";\nimport { Container } from \"@material-ui/core\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n\n  return (\n    <>\n      <Container className=\"main\">\n        {!images.length ? (\n          <div className=\"input-box\">\n            <PdfToImages setImages={(images) => setImages(images)} />\n          </div>\n        ) : null}\n        {images.length ? (\n          <ImagesToBook\n            pages={images}\n            reset={() => setImages([])}\n            onClear={() => {\n              setImages([]);\n            }}\n          />\n        ) : null}\n      </Container>\n      <div className=\"footer\">Copyright © 2021 . By Siddiqa Qureshi</div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}